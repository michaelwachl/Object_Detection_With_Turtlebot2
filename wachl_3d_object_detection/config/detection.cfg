#!/usr/bin/env python
PACKAGE = "wachl_3d_object_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Show Pointclouds
gen.add("VISIU_", bool_t, 0, "Visualisation Mode",  False);
gen.add("CONSOLE_OUTPUT_", bool_t, 0, "Console output",  False);

# Prefiltering parameter:
gen.add("LEAF_SIZE_", double_t, 0, "Filtering leaf size", .01, 0, 0.1);
gen.add("Z_LIM_MIN_", double_t, 0, "Min z distance", 0, 0, 1);
gen.add("Z_LIM_MAX_", double_t, 0, "Max z distance", 3.0, 0, 6);
gen.add("Y_LIM_MIN_", double_t, 0, "Min y distance", 0.06, -1, 1);
gen.add("Y_LIM_MAX_", double_t, 0, "Max y distance", 0.13, 0, 1);
gen.add("CLUSTER_TOLERANCE_", double_t, 0, "Cluster tolerance", .04 , 0, .1);
gen.add("CLUSTER_MIN_", int_t, 0, "Min Cluster size", 30, 0, 1000);
gen.add("CLUSTER_MAX_", int_t, 0, "Max Cluster size", 600, 800, 2000);

# Shape filtering parameters:
gen.add("PLANE_RATIO_", double_t, 0, "Object plane ratio", .4, 0, 1);
gen.add("ZYLINDER_RATIO_", double_t, 0, "Object zylinder ratio", .3, 0, 1);
gen.add("MAX_WIDTH_", double_t, 0, "Max object width", .32, 0, 1);
gen.add("MAX_DEPTH_", double_t, 0, "Max object depth", .2, 0, 1);

# Color filtering parameters:
gen.add("YELLOW_RANGE_H_MIN_", double_t, 0, "Min h value yellow", 20.0, 0, 255);
gen.add("YELLOW_RANGE_H_MAX_", double_t, 0, "Max h value yellow", 70.0, 0, 255);
gen.add("YELLOW_RANGE_V_MIN_", double_t, 0, "Min v value yellow", .3, 0, 1);
gen.add("YELLOW_RANGE_V_MAX_", double_t, 0, "Max v value yellow", 1.0, 0, 1);
gen.add("YELLOW_RANGE_S_MIN_", double_t, 0, "Min s value yellow", .4, 0, 1);
gen.add("YELLOW_RANGE_S_MAX_", double_t, 0, "Max s value yellow", 1.0, 0, 1);

gen.add("GREEN_RANGE_H_MIN_", double_t, 0, "Min h value green", 72.0, 0, 255);
gen.add("GREEN_RANGE_H_MAX_", double_t, 0, "Max h value green", 170.0, 0, 255);
gen.add("GREEN_RANGE_V_MIN_", double_t, 0, "Min v value green", .2, 0, 1);
gen.add("GREEN_RANGE_V_MAX_", double_t, 0, "Max v value green", 1.0, 0, 1);
gen.add("GREEN_RANGE_S_MIN_", double_t, 0, "Min s value green", .2, 0, 1);
gen.add("GREEN_RANGE_S_MAX_", double_t, 0, "Max s value green", 1.0, 0, 1);

gen.add("BLUE_RANGE_H_MIN_", double_t, 0, "Min h value blue", 220.0, 0, 255);
gen.add("BLUE_RANGE_H_MAX_", double_t, 0, "Max h value blue", 250.0, 0, 255);
gen.add("BLUE_RANGE_V_MIN_", double_t, 0, "Min v value blue", .1, 0, 1);
gen.add("BLUE_RANGE_V_MAX_", double_t, 0, "Max v value blue", 1.0, 0, 1);
gen.add("BLUE_RANGE_S_MIN_", double_t, 0, "Min s value blue", .1, 0, 1);
gen.add("BLUE_RANGE_S_MAX_", double_t, 0, "Max s value blue", .5, 0, 1);

gen.add("DARK_RANGE_", double_t, 0, "Illumination threshold", .2, 0, 1);

gen.add("GREEN_RATIO_", double_t, 0, "Ratio for green objects", .5, 0, 1);
gen.add("BLUE_RATIO_", double_t, 0, "Ratio for blue objects", .5, 0, 1);
gen.add("YELLOW_RATIO_", double_t, 0, "Ratio for yellow objects", .45, 0, 1);
gen.add("DARK_RATIO_", double_t, 0, "Ratio for robot objects", .5, 0, 1);

#Robo parameter
gen.add("ROBO_HEIGHT_MIN_", double_t, 0, "Min height of robot", .16, 0, 1);
gen.add("ROBO_HEIGHT_MAX_", double_t, 0, "Max height of robot", .2, 0, 1);
gen.add("ROBO_WIDTH_MIN_", double_t, 0, "Min width of robot", .25, 0, 1);
gen.add("ROBO_WIDTH_MAX_", double_t, 0, "Max width of robot", .34, 0, 1);


exit(gen.generate(PACKAGE, "wachl_3d_object_detection", "detection"))
